{"message":"unused variable: `i`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"modules/axruntime/src/hv/vmx/device_emu/mod.rs","byte_start":867,"byte_end":868,"line_start":34,"line_end":34,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"        for i in 0..MAX_VMS {","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"modules/axruntime/src/hv/vmx/device_emu/mod.rs","byte_start":867,"byte_end":868,"line_start":34,"line_end":34,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"        for i in 0..MAX_VMS {","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"_i","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `i`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmodules/axruntime/src/hv/vmx/device_emu/mod.rs:34:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for i in 0..MAX_VMS {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_i`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"function `remap_kernel_memory` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"modules/axruntime/src/lib.rs","byte_start":6843,"byte_end":6862,"line_start":253,"line_end":253,"column_start":4,"column_end":23,"is_primary":true,"text":[{"text":"fn remap_kernel_memory() -> Result<(), axhal::paging::PagingError> {","highlight_start":4,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `remap_kernel_memory` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmodules/axruntime/src/lib.rs:253:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m253\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn remap_kernel_memory() -> Result<(), axhal::paging::PagingError> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"constant `VM_EXIT_INSTR_LEN_VMCALL` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"modules/axruntime/src/hv/vmx/mod.rs","byte_start":374,"byte_end":398,"line_start":14,"line_end":14,"column_start":7,"column_end":31,"is_primary":true,"text":[{"text":"const VM_EXIT_INSTR_LEN_VMCALL: u8 = 3;","highlight_start":7,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `VM_EXIT_INSTR_LEN_VMCALL` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmodules/axruntime/src/hv/vmx/mod.rs:14:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst VM_EXIT_INSTR_LEN_VMCALL: u8 = 3;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"variable `VCpu` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"modules/axruntime/src/hv/vmx/device_emu/lapic.rs","byte_start":1174,"byte_end":1178,"line_start":46,"line_end":46,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"    pub fn rdmsr(VCpu: &mut VCpu, msr: u32) -> HyperResult<u64> {","highlight_start":18,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"modules/axruntime/src/hv/vmx/device_emu/lapic.rs","byte_start":1174,"byte_end":1178,"line_start":46,"line_end":46,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"    pub fn rdmsr(VCpu: &mut VCpu, msr: u32) -> HyperResult<u64> {","highlight_start":18,"highlight_end":22}],"label":null,"suggested_replacement":"vcpu","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `VCpu` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmodules/axruntime/src/hv/vmx/device_emu/lapic.rs:46:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn rdmsr(VCpu: &mut VCpu, msr: u32) -> HyperResult<u64> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `vcpu`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"variable `VCpu` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"modules/axruntime/src/hv/vmx/device_emu/lapic.rs","byte_start":1285,"byte_end":1289,"line_start":50,"line_end":50,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"    pub fn wrmsr(VCpu: &mut VCpu, msr: u32, value: u64) -> HyperResult {","highlight_start":18,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"modules/axruntime/src/hv/vmx/device_emu/lapic.rs","byte_start":1285,"byte_end":1289,"line_start":50,"line_end":50,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"    pub fn wrmsr(VCpu: &mut VCpu, msr: u32, value: u64) -> HyperResult {","highlight_start":18,"highlight_end":22}],"label":null,"suggested_replacement":"vcpu","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `VCpu` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmodules/axruntime/src/hv/vmx/device_emu/lapic.rs:50:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn wrmsr(VCpu: &mut VCpu, msr: u32, value: u64) -> HyperResult {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `vcpu`\u001b[0m\n\n"}
{"message":"variable `VCpu` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"modules/axruntime/src/hv/vmx/device_emu/lapic.rs","byte_start":1429,"byte_end":1433,"line_start":56,"line_end":56,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    fn read(VCpu: &mut VCpu, offset: u32) -> HyperResult<u64> {","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"modules/axruntime/src/hv/vmx/device_emu/lapic.rs","byte_start":1429,"byte_end":1433,"line_start":56,"line_end":56,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    fn read(VCpu: &mut VCpu, offset: u32) -> HyperResult<u64> {","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"vcpu","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `VCpu` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmodules/axruntime/src/hv/vmx/device_emu/lapic.rs:56:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn read(VCpu: &mut VCpu, offset: u32) -> HyperResult<u64> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `vcpu`\u001b[0m\n\n"}
{"message":"variable `VCpu` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"modules/axruntime/src/hv/vmx/device_emu/lapic.rs","byte_start":2154,"byte_end":2158,"line_start":71,"line_end":71,"column_start":14,"column_end":18,"is_primary":true,"text":[{"text":"    fn write(VCpu: &mut VCpu, offset: u32, value: u64) -> HyperResult {","highlight_start":14,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"modules/axruntime/src/hv/vmx/device_emu/lapic.rs","byte_start":2154,"byte_end":2158,"line_start":71,"line_end":71,"column_start":14,"column_end":18,"is_primary":true,"text":[{"text":"    fn write(VCpu: &mut VCpu, offset: u32, value: u64) -> HyperResult {","highlight_start":14,"highlight_end":18}],"label":null,"suggested_replacement":"vcpu","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `VCpu` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmodules/axruntime/src/hv/vmx/device_emu/lapic.rs:71:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn write(VCpu: &mut VCpu, offset: u32, value: u64) -> HyperResult {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `vcpu`\u001b[0m\n\n"}
{"message":"7 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 7 warnings emitted\u001b[0m\n\n"}
